import zingchart from "../../../node_modules/zingchart/es6.js";
import { ZC } from "../../../node_modules/zingchart/es6.js";
import "../../../node_modules/zingchart/modules-es6/zingchart-pareto.min.js";

let ChartView = {};

ChartView.render = function (SalesMovies, RentalsMovies) {

// Sales
let allSalesCount = SalesMovies.map(item => item.sales_count);
let allSalesTitle = SalesMovies.map(item => item.movie_title);
let allSalesDate = SalesMovies.map(item => item.purchase_month);
// Enlever les doublons des dates
allSalesDate = [...new Set(allSalesDate)];

console.log("Données des dates de ventes :", allSalesDate);

// Rentals
let allRentalsCount = RentalsMovies.map(item => item.rentals_count);
let allRentalsTitle = RentalsMovies.map(item => item.movie_title);
let allRentalsDate = RentalsMovies.map(item => item.rental_month);
// Enlever les doublons des dates
allRentalsDate = [...new Set(allRentalsDate)];

// options du select
let options = allRentalsTitle.length > allSalesTitle.length ? allRentalsTitle : allSalesTitle;

// id du select
let select = document.createElement("select");
select.id = "MoviesSelect";

// style du select
select.style.margin = "10px 10px";
select.style.overflow = "visible";
select.style.padding = "5px";
select.style.border = "1px solid #ccc";
select.style.borderRadius = "5px";
select.style.backgroundColor = "#f9f9f9";
select.style.fontSize = "14px";
select.style.color = "#333";

// création des options
options.forEach(type => {
  let option = document.createElement("option");
  option.value = type;
  option.text = type;
  select.appendChild(option);
});

// mettre le select dans le div
let chart_select = document.getElementById("div_select");
chart_select.appendChild(select);

// récupérer la valeur du select
let selected = select.value;

// Donnée en fonction du select
let selectedMovieData = {
  sales: [],
  rentals: []
};

SalesMovies.forEach(movie => {
  if (movie.movie_title === selected) {
    selectedMovieData.sales = movie.sales_count;
  }
});

RentalsMovies.forEach(movie => {
  if (movie.movie_title === selected) {
    selectedMovieData.rentals = movie.rentals_count;
  }
});
// 

// // Configuration du graphique
// let chartConfig = {
//   type: "bar",
//   title: {
//     text: "Ventes et Locations pour le film sélectionné",
//   },
//   backgroundColor: "#f0f0f0",
//   series: [
//     { values: selectedMovieData.sales, text: "Sales" },
//     { values: selectedMovieData.rentals, text: "Rentals" },
//   ],
//   scaleX: {
//     labels: ["Sales", "Rentals"],
//     item: {
//       angle: 0,
//       wrapText: true,
//       maxChars: 7,
//     },
//     fontColor: "#000000",
//     fontSize: "12px",
//   },
//   scaleY: {
//     label: {
//       text: "Total",
//     },
//   },
//   legend: {
//     draggable: true,
//   },
//   plot: {
//     animation: {
//       effect: 3,
//       sequence: 1,
//       speed: 700,
//     },
//     aspect: "spline",
//     marker: {
//       visible: false,
//     },
//   },
//   tooltip: {
//     text: "%t: %v",
//     backgroundColor: "#fff",
//     borderColor: "#333",
//     borderWidth: 1,
//     borderRadius: 5,
//     fontColor: "#333",
//   },
//   crosshairX: {
//     plotLabel: {
//       backgroundColor: '#434343',
//       fontColor: '#FFF',
//     },
//     scaleLabel: {
//       backgroundColor: '#fff',
//       borderColor: '#333',
//       borderRadius: '3px',
//       borderWidth: '1px',
//       fontColor: 'black',
//     },
//   },
// };
// // 

// event change du select
select.addEventListener("change", function() {
  let selected = select.value;
  let selectedMovieData = {
    sales: [],
    rentals: []
  };

  // Associer les dates aux ventes pour le film sélectionné
  let salesDataByDate = {};
  SalesMovies.forEach(item => {
    if (item.movie_title === selected) {
      if (!salesDataByDate[item.purchase_month]) {
        salesDataByDate[item.purchase_month] = [];
      }
      salesDataByDate[item.purchase_month].push(item.sales_count);
    }
  });

  // Associer les dates aux locations pour le film sélectionné
  let rentalsDataByDate = {};
  RentalsMovies.forEach(item => {
    if (item.movie_title === selected) {
      if (!rentalsDataByDate[item.rental_month]) {
        rentalsDataByDate[item.rental_month] = [];
      }
      rentalsDataByDate[item.rental_month].push(item.rentals_count);
    }
  });

  // Calculer le total des ventes par date
  let totalSalesByDate = allSalesDate.map(date => {
    return salesDataByDate[date] ? salesDataByDate[date].reduce((a, b) => a + b, 0) : 0;
  });

  // Calculer le total des locations par date
  let totalRentalsByDate = allSalesDate.map(date => {
    return rentalsDataByDate[date] ? rentalsDataByDate[date].reduce((a, b) => a + b, 0) : 0;
  });

  console.log("Données des ventes par date pour le film sélectionné :", salesDataByDate);
  console.log("Données des locations par date pour le film sélectionné :", rentalsDataByDate);

  // Mettre à jour la configuration du graphique avec les nouvelles données
  chartConfig.series = [
    { values: totalSalesByDate, text: "Sales" },
    { values: totalRentalsByDate, text: "Rentals" }
  ];

  zingchart.render({
    id: "chart",
    data: chartConfig,
    height: "100%",
    width: "100%"
  });
});

// Associer les dates aux ventes pour le film sélectionné
let salesDataByDate = {};
SalesMovies.forEach(item => {
  if (item.movie_title === selected) {
    if (!salesDataByDate[item.purchase_month]) {
      salesDataByDate[item.purchase_month] = [];
    }
    salesDataByDate[item.purchase_month].push(item.sales_count);
  }
});

console.log("Données des ventes par date pour le film sélectionné :", salesDataByDate);
// 

// Associer les dates aux locations pour le film sélectionné
let rentalsDataByDate = {};
RentalsMovies.forEach(item => {
  if (item.movie_title === selected) {
    if (!rentalsDataByDate[item.rental_month]) {
      rentalsDataByDate[item.rental_month] = [];
    }
    rentalsDataByDate[item.rental_month].push(item.rentals_count);
  }
});

console.log("Données des locations par date pour le film sélectionné :", rentalsDataByDate);
// 

  // Configuration du graphique
  let chartConfig = {
    type: "bar",
    title: {
      text: "Ventes et Locations par Mois",
    },
    backgroundColor: "#f0f0f0",
    series: [
      { values: selectedMovieData.sales, text: "Sales" },
      { values: selectedMovieData.rentals, text: "Rentals" }
    ],
    scaleX: {
      labels: allSalesDate,
      item: {
        angle: 0,
        wrapText: true,
        maxChars: 7,
      },
      fontColor: "#000000",
      fontSize: "12px",
    },
    scaleY: {
      label: {
        text: "Total",
      },
    },
    legend: {
      draggable: true,
    },
    plot: {
      animation: {
        effect: 3,
        sequence: 1,
        speed: 700,
      },
      aspect: "spline",
      marker: {
        visible: false,
      },
    },
    tooltip: {
      text: "%t: %v",
      backgroundColor: "#fff",
      borderColor: "#333",
      borderWidth: 1,
      borderRadius: 5,
      fontColor: "#333",
    },
    crosshairX: {
      plotLabel: {
        backgroundColor: '#434343',
        fontColor: '#FFF',
      },
      scaleLabel: {
        backgroundColor: '#fff',
        borderColor: '#333',
        borderRadius: '3px',
        borderWidth: '1px',
        fontColor: 'black',
      },
    },
  };

  // Calculer le total des ventes par date
  let totalSalesByDate = allSalesDate.map(date => {
    return salesDataByDate[date] ? salesDataByDate[date].reduce((a, b) => a + b, 0) : 0;
  });

  // Calculer le total des locations par date
  let totalRentalsByDate = allSalesDate.map(date => {
    return rentalsDataByDate[date] ? rentalsDataByDate[date].reduce((a, b) => a + b, 0) : 0;
  });

  // Mettre à jour la configuration du graphique avec les nouvelles données
  chartConfig.series = [
    { values: totalSalesByDate, text: "Sales" },
    { values: totalRentalsByDate, text: "Rentals" }
  ];

  zingchart.render({
    id: "chart",
    data: chartConfig,
    height: "100%",
    width: "100%",
  });
};

export { ChartView };
